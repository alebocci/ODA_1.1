name: oda
services:
  zookeeper:
    container_name: zookeeper
    image: alebocci/odakafka
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
      ]
    restart: always
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    container_name: kafka
    image: alebocci/odakafka
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override auto.create.topics.enable=false --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}"
    ]
    depends_on:
    - zookeeper
    ports:
    - ${kafka_port}:9094
    #restart: always
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://${kafka_address}:${kafka_port}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    env_file:
      - influx.env
    volumes:
      - influxdbdata:/var/lib/influxdb2:rw
      - influxdbconfig:/etc/influxdb2:rw
    restart: always

  mysql:
    image: mysql:5.7
    container_name: mysqldb
    restart: always
    env_file:
      - mysql.env
    volumes:
      - mysqldata:/var/lib/mysql
    
  dbmanager:
    build: 
      args:
        DB_MANAGER_PORT: ${db_manager_port}
    image: oda-dbmanager:latest
    container_name: dbmanager
    restart: always
    env_file:
      - influx.env
    environment: 
      DB_PORT: ${db_port}
    depends_on:
      - influxdb

  topicmanager:
    build:
      args:
        TOPIC_MANAGER_PORT: ${topic_manager_port}
    image: oda-topicmanager:latest
    container_name: topicmanager
    restart: always
    environment: 
      KAFKA_INTERNAL_PORT: ${kafka_internal_port}
    depends_on:
      - kafka
      - dbmanager

  datapump:
    image: oda-datapump:latest
    container_name: datapump
    restart: always
    environment: 
      KAFKA_INTERNAL_PORT: ${kafka_internal_port}
      DB_MANAGER_PORT: ${db_manager_port}
    depends_on:
      - kafka
      - dbmanager
    
  apigateway:
    build:
      args:
        API_GATEWAY_PORT: ${api_gateway_port}
    image: oda-apigateway:latest
    container_name: apigateway
    ports:
      - ${api_gateway_port}:${api_gateway_port}
    restart: always
    environment:
      API_GATEWAY_PORT: ${api_gateway_port}
      KAFKA_PORT: ${kafka_port}
      KAFKA_ADDRESS: ${kafka_address}
      DB_MANAGER_PORT: ${db_manager_port}
      TOPIC_MANAGER_PORT: ${topic_manager_port}
      WEB_DATA_TRANSFORMER_PORT: ${web_data_transformer_port}
      DATA_TRANSFORMER_PORT: ${data_transformer_port}
    depends_on:
      - dbmanager
      - topicmanager
      - data_transformer
      - web_data_transformer

  web_data_transformer:
    build:
      args:
        WEB_DATA_TRANSFORMER_PORT: ${web_data_transformer_port}
    image: oda-web_data_transformer:latest
    container_name: webdatatransformer
    restart: always
    ports:
      - ${web_data_transformer_port}:${web_data_transformer_port}
    environment:
      WEB_DATA_TRANSFORMER_PORT: ${web_data_transformer_port}
      DATA_TRANSFORMER_PORT: ${data_transformer_port}
      DB_MANAGER_PORT: ${db_manager_port}
    depends_on:
      - data_transformer
      - dbmanager

  data_transformer:
    build: 
      args:
        DATA_TRANSFORMER_PORT: ${data_transformer_port}
    image: oda-data_transformer:latest
    container_name: datatransformer
    restart: always
    environment:
      DATA_TRANSFORMER_PORT: ${data_transformer_port}
      DB_MANAGER_PORT: ${db_manager_port}
    depends_on:
      - mysql
      - dbmanager

volumes:
  influxdbdata:
  influxdbconfig:
  mysqldata: